stages:
  - prepare
  - build
  - data
  
variables:
  BUILD_NUMBER: ${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  APP_VERSION: ${CI_COMMIT_SHORT_SHA}
  IMAGE_BASENAME: ${CI_REGISTRY}/gamestuff.info/poketools
  
# This job exists because the docker build process requires the vendors directory to exist
# in the context.
composer:
  stage: prepare
  image: composer:1.8
  cache:
    paths:
      - app/vendor
  script:
    - cd app
    - composer install --ignore-platform-reqs --prefer-dist --no-scripts --no-progress --no-suggest --no-interaction
  artifacts:
    paths:
      - app/vendor
    # Only used for preparing the build
    expire_in: 1 day

build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  dependencies:
    - composer
  variables:
    COMPOSE_FILE: docker-compose.yaml
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - apk add --no-cache gcc libc-dev libffi-dev make openssl-dev py-pip python2-dev
    - pip install docker-compose
    - docker info
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker-compose build
    - docker image tag ${IMAGE_BASENAME}/app:latest ${IMAGE_BASENAME}/app:${BUILD_NUMBER}
    - docker image tag ${IMAGE_BASENAME}/web:latest ${IMAGE_BASENAME}/web:${BUILD_NUMBER}
    - docker push ${IMAGE_BASENAME}/app:latest
    - docker push ${IMAGE_BASENAME}/app:${BUILD_NUMBER}
    - docker push ${IMAGE_BASENAME}/web:latest
    - docker push ${IMAGE_BASENAME}/web:${BUILD_NUMBER}
    
data:
  stage: data
  image: $IMAGE_BASENAME/app:$BUILD_NUMBER
  services:
    - postgres:11
  dependencies: []
  variables:
    # Don't need to checkout because this job operates in the application image
    GIT_STRATEGY: none
    POSTGRES_DB: poketools
    POSTGRES_USER: poketools
    POSTGRES_PASSWORD: secret
    APP_ENV: dev
    APP_SECRET: 318586181a01928e0aca714a0e4beeb0
    DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    # Need a fake IDE env var.  It will never be used.
    IDE: phpstorm
  script:
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - apk add --no-cache postgresql-client
    - cd /var/www
    - php bin/console doctrine:schema:update --force
    - php -d memory_limit=-1 bin/console a2b:migrate --preserve
    - pg_dump --dbname=${POSTGRES_DB} --column-inserts --schema='public' --file="./db/template.generated.pg.sql"
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - db/template.generated.pg.sql
