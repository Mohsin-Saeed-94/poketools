import os
import re
import sys
import string
from ruamel.yaml import YAML

yaml = YAML()
yaml.default_flow_style = False
yaml.indent(mapping=2, sequence=4, offset=2)


def icons():
    asm_file = sys.argv[1]
    yaml_dir = sys.argv[2]

    _species_order = [
        'bulbasaur',
        'ivysaur',
        'venusaur',
        'charmander',
        'charmeleon',
        'charizard',
        'squirtle',
        'wartortle',
        'blastoise',
        'caterpie',
        'metapod',
        'butterfree',
        'weedle',
        'kakuna',
        'beedrill',
        'pidgey',
        'pidgeotto',
        'pidgeot',
        'rattata',
        'raticate',
        'spearow',
        'fearow',
        'ekans',
        'arbok',
        'pikachu',
        'raichu',
        'sandshrew',
        'sandslash',
        'nidoran-f',
        'nidorina',
        'nidoqueen',
        'nidoran-m',
        'nidorino',
        'nidoking',
        'clefairy',
        'clefable',
        'vulpix',
        'ninetales',
        'jigglypuff',
        'wigglytuff',
        'zubat',
        'golbat',
        'oddish',
        'gloom',
        'vileplume',
        'paras',
        'parasect',
        'venonat',
        'venomoth',
        'diglett',
        'dugtrio',
        'meowth',
        'persian',
        'psyduck',
        'golduck',
        'mankey',
        'primeape',
        'growlithe',
        'arcanine',
        'poliwag',
        'poliwhirl',
        'poliwrath',
        'abra',
        'kadabra',
        'alakazam',
        'machop',
        'machoke',
        'machamp',
        'bellsprout',
        'weepinbell',
        'victreebel',
        'tentacool',
        'tentacruel',
        'geodude',
        'graveler',
        'golem',
        'ponyta',
        'rapidash',
        'slowpoke',
        'slowbro',
        'magnemite',
        'magneton',
        'farfetchd',
        'doduo',
        'dodrio',
        'seel',
        'dewgong',
        'grimer',
        'muk',
        'shellder',
        'cloyster',
        'gastly',
        'haunter',
        'gengar',
        'onix',
        'drowzee',
        'hypno',
        'krabby',
        'kingler',
        'voltorb',
        'electrode',
        'exeggcute',
        'exeggutor',
        'cubone',
        'marowak',
        'hitmonlee',
        'hitmonchan',
        'lickitung',
        'koffing',
        'weezing',
        'rhyhorn',
        'rhydon',
        'chansey',
        'tangela',
        'kangaskhan',
        'horsea',
        'seadra',
        'goldeen',
        'seaking',
        'staryu',
        'starmie',
        'mr-mime',
        'scyther',
        'jynx',
        'electabuzz',
        'magmar',
        'pinsir',
        'tauros',
        'magikarp',
        'gyarados',
        'lapras',
        'ditto',
        'eevee',
        'vaporeon',
        'jolteon',
        'flareon',
        'porygon',
        'omanyte',
        'omastar',
        'kabuto',
        'kabutops',
        'aerodactyl',
        'snorlax',
        'articuno',
        'zapdos',
        'moltres',
        'dratini',
        'dragonair',
        'dragonite',
        'mewtwo',
        'mew',
        'chikorita',
        'bayleef',
        'meganium',
        'cyndaquil',
        'quilava',
        'typhlosion',
        'totodile',
        'croconaw',
        'feraligatr',
        'sentret',
        'furret',
        'hoothoot',
        'noctowl',
        'ledyba',
        'ledian',
        'spinarak',
        'ariados',
        'crobat',
        'chinchou',
        'lanturn',
        'pichu',
        'cleffa',
        'igglybuff',
        'togepi',
        'togetic',
        'natu',
        'xatu',
        'mareep',
        'flaaffy',
        'ampharos',
        'bellossom',
        'marill',
        'azumarill',
        'sudowoodo',
        'politoed',
        'hoppip',
        'skiploom',
        'jumpluff',
        'aipom',
        'sunkern',
        'sunflora',
        'yanma',
        'wooper',
        'quagsire',
        'espeon',
        'umbreon',
        'murkrow',
        'slowking',
        'misdreavus',
        'unown',
        'wobbuffet',
        'girafarig',
        'pineco',
        'forretress',
        'dunsparce',
        'gligar',
        'steelix',
        'snubbull',
        'granbull',
        'qwilfish',
        'scizor',
        'shuckle',
        'heracross',
        'sneasel',
        'teddiursa',
        'ursaring',
        'slugma',
        'magcargo',
        'swinub',
        'piloswine',
        'corsola',
        'remoraid',
        'octillery',
        'delibird',
        'mantine',
        'skarmory',
        'houndour',
        'houndoom',
        'kingdra',
        'phanpy',
        'donphan',
        'porygon2',
        'stantler',
        'smeargle',
        'tyrogue',
        'hitmontop',
        'smoochum',
        'elekid',
        'magby',
        'miltank',
        'blissey',
        'raikou',
        'entei',
        'suicune',
        'larvitar',
        'pupitar',
        'tyranitar',
        'lugia',
        'ho-oh',
        'celebi',
    ]
    species_index = 0

    with open(asm_file, mode='rt') as asm_data:
        for entry in asm_data:
            entry = entry.strip()
            match = re.fullmatch('^db ICON_(?P<sprite>[\w_]+)\s*; (?P<species>[\w_]+)$', entry)
            if match:
                species_slug = _species_order[species_index]
                print('{asm_species} = {pkt_species}'.format(asm_species=match.group('species'), pkt_species=species_slug))
                sprite = match.group('sprite').lower()
                yaml_path = os.path.join(yaml_dir, '{species}.yaml'.format(species=species_slug))
                with open(yaml_path, 'rt') as species_yaml:
                    species_data = yaml.load(species_yaml.read())

                    if species_slug == 'unown':
                        forms = []
                        for letter in string.ascii_lowercase:
                            forms.append('unown-{}'.format(letter))
                    else:
                        forms = [species_slug]
                    for form_slug in forms:
                        for version_group in ['gold-silver', 'crystal']:
                            species_data = set_icon(species_data, species_slug, form_slug, sprite, version_group)
                with open(yaml_path, 'wt') as species_yaml:
                    yaml.dump(species_data, species_yaml)
                species_index = species_index + 1


def set_icon(species_data, species_slug, form_slug, sprite, version_group):
    species_data[version_group]['pokemon'][species_slug]['forms'][form_slug]['icon'] = 'gen2/{sprite}.png'.format(
        sprite=sprite)

    return species_data


if __name__ == '__main__':
    exit(icons())
