{% extends '@JsonSchema/schema/type/type.html.twig' %}
{# /** @var \DragoonBoots\JsonSchemaBundle\Schema\Type\SchemaString schema */ #}

{% block basics %}
    {% import '@JsonSchema/schema/type/type.html.twig' as typeHelpers %}

    <table class="jsb--infolist">
        {% if schema.minLength is not null
            or schema.maxLength is not null %}
            <tr>
                <th>Length</th>
                <td>
                    {% if schema.minLength is not null %}
                        <code>{{ schema.minLength }}</code>
                        &le;
                    {% endif %}
                    <var>length</var>
                    {% if schema.maxLength is not null %}
                        &le;
                        <code>{{ schema.maxLength }}</code>
                    {% endif %}
                    <table class="jsb--infolist">
                        {% if schema.minLength is not null %}
                            <tr id="{{ typeHelpers.getId(path|default(['requirements']), 'minLength') }}">
                                <th><code>minProperties</code></th>
                                <td><code>{{ schema.minLength }}</code></td>
                            </tr>
                        {% endif %}
                        {% if schema.maxLength is not null %}
                            <tr id="{{ typeHelpers.getId(path|default(['requirements']), 'maxLength') }}">
                                <th><code>maxProperties</code></th>
                                <td><code>{{ schema.maxLength }}</code></td>
                            </tr>
                        {% endif %}
                    </table>
                </td>
            </tr>
        {% endif %}
        {% if schema.pattern is not null %}
            <tr id="{{ typeHelpers.getId(path|default(['requirements']), 'pattern') }}">
                <th><code>pattern</code></th>
                <td><code class="lang-regex">{{ schema.pattern }}</code></td>
            </tr>
        {% endif %}
        {% if schema.format is not null %}
            <tr id="{{ typeHelpers.getId(path|default(['requirements']), 'format') }}">
                <th><code>format</code></th>
                <td>
                    <code>{{ schema.format }}</code>
                    (See
                    <a href="http://json-schema.org/understanding-json-schema/reference/string.html#format">here</a>
                    for what this means.
                </td>
            </tr>
        {% endif %}
    </table>
{% endblock %}
