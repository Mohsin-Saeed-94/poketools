{% extends 'base.html.twig' %}
{% import '_macros/datatable.html.twig' as datatable %}

{% block title %}Locations - {{ location.name }}{% endblock %}

{% block body %}
    {% import _self as helpers %}
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">{{ version }}</li>
            <li class="breadcrumb-item">
                <a href="{{ path('location_index', {'versionSlug': version.slug}) }}">Locations</a>
            </li>
            {{ helpers.location_breadcrumb(location, version) }}
        </ol>
    </nav>

    <h1>{{ location.name }}</h1>
    {# Map #}
    {{ helpers.location_map(location, version) }}

    {# Sub-locations #}
    {% if location.subLocations is not empty %}
        <h2>Sub-locations</h2>
        <ul>
            {% for sub_location in location.subLocations %}
                <li>
                    <a href="{{ path('location_view', {'locationSlug': sub_location.slug, 'versionSlug': version.slug}) }}">
                        {{ sub_location.name }}
                    </a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}

    {# Description #}
    {% if location.description is not empty %}
        {{ location.description|markdown }}
    {% endif %}

    {{ helpers.show_areas(location.areas, shop_tables, encounter_tables, encounter_counts) }}
{% endblock %}

{% block stylesheets %}
    {{ encore_entry_link_tags('location_view') }}
{% endblock %}

{% block javascripts %}
    {{ encore_entry_script_tags('location_view') }}
{% endblock %}

{% macro location_breadcrumb(location, version, active = true) %}
    {% import _self as helpers %}
    {% if location.superLocation is not null %}
        {{ helpers.location_breadcrumb(location.superLocation, version, false) }}
    {% endif %}

    <li class="breadcrumb-item{% if active %} active{% endif %}">
        {% if not active %}
            <a href="{{ path('location_view', {'locationSlug': location.slug, 'versionSlug': version.slug}) }}">
                {{ location.name }}
            </a>
        {% else %}
            {{ location.name }}
        {% endif %}
    </li>
{% endmacro %}

{% macro location_map(location, version) %}
    {% import _self as helpers %}
    {# Use the provided map is available #}
    {% if location.map %}
        <div class="d-flex justify-content-around">
            <div class="pkt-location-view-map card">
                <div class="card-img-top">
                    {{ location.map|location_map }}
                </div>
                <div class="card-footer">
                    {{ location.map.map.name }}
                </div>
            </div>
        </div>
    {% elseif location.superLocation and location.superLocation.map %}
        {# If this is a sub-location and the super has a map, try to use that. #}
        {{ helpers.location_map(location.superLocation, version) }}
    {% endif %}
{% endmacro %}

{% macro show_areas(areas, shop_tables, encounter_tables, encounter_counts) %}
    {% import _self as helpers %}
    {# /** @var \App\Entity\LocationArea[] areas **/ #}
    {# Areas nav #}
    {% if areas|length > 1 %}
        <ul class="nav nav-tabs" role="tablist">
            {% for area in areas %}
                {% set tree_path = area.treePath|trim(',')|split(',')|join('-') %}
                <li class="nav-item">
                    <a class="nav-link{% if area.default %} active{% endif %}"
                       id="pkt-location-view-tabs-{{ tree_path }}"
                       data-toggle="tab" href="#pkt-location-view-area-{{ tree_path }}"
                       role="tab"
                       aria-controls="pkt-location-view-area-{{ tree_path }}"{% if area.default %} aria-selected="true"{% endif %}
                    >
                        {{ area.name }}
                    </a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}
    <div class="tab-content">
        {% for area in areas %}
            {% set tree_path = area.treePath|trim(',')|split(',')|join('-') %}
            <div class="tab-pane{% if area.default %} show active{% endif %}"
                 id="pkt-location-view-area-{{ tree_path }}"
                 role="tabpanel" aria-labelledby="pkt-location-view-tabs-{{ tree_path }}">

                {# Shops #}
                {% if area.shops is not empty %}
                    <h3>Shops</h3>
                    {% for shop in area.shops %}
                        <h4>{{ shop.name }}</h4>
                        <div class="pkt-location-view-shops-table">
                            {{ datatable.datatable(shop_tables[shop.id], 'pkt-location-view-shops-'~shop.id) }}
                        </div>
                    {% endfor %}
                {% endif %}

                {# Pokemon #}
                {% if encounter_counts[area.treePath] > 0 %}
                    <h3>Pok√©mon</h3>
                    <div class="pkt-location-view-encounters-table">
                        {{ datatable.datatable(encounter_tables[area.treePath], 'pkt-location-view-encounters-'~tree_path) }}
                    </div>
                {% endif %}

                {# This area is empty #}
                {% if area.shops is empty and encounter_counts[area.treePath] == 0 %}
                    <p>This area has no points of interest.</p>
                {% endif %}

                {% if area.treeChildren is not empty %}
                    {{ helpers.show_areas(area.treeChildren, shop_tables, encounter_tables, encounter_counts) }}
                {% endif %}
            </div>
        {% endfor %}
    </div>
{% endmacro %}
