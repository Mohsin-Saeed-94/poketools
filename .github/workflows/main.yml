name: CI
on:
  push: ~
  pull_request: ~
  workflow_dispatch: ~

env:
  BUILD_NUMBER: ${{ github.sha }}
  APP_ENV: dev
  IDE: ''

jobs:
  test_schema:
    name: Test data schema
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './app'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '8.0'
          ini-values: display_errors=On
          extensions: ds, gd, intl, opcache, pcntl, pdo_sqlite, zip
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Get cache directories
        id: cache_dirs
        run: |
          echo "::set-output name=composer::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache_dirs.outputs.composer }}
          key: ${{ runner.os }}-deps-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-deps-
      - name: Install PHP dependencies
        run: |
          composer install --prefer-dist --optimize-autoloader
          php vendor/bin/simple-phpunit install
      - name: Run Tests
        run: php vendor/bin/simple-phpunit -c phpunit.xml.dist --testsuite="Data Schema"

  build_db:
    name: Build Dex database
    runs-on: ubuntu-latest
    needs:
      - test_schema
    defaults:
      run:
        working-directory: './app'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '8.0'
          ini-values: display_errors=On
          extensions: ds, gd, intl, opcache, pcntl, pdo_sqlite, zip
      - name: Get cache directories
        id: cache_dirs
        run: |
          echo "::set-output name=composer::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.cache_dirs.outputs.composer }}
          key: ${{ runner.os }}-deps-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-deps-
      - name: Install PHP dependencies
        run: composer install --prefer-dist --optimize-autoloader
      - name: Build database
        run: |
          bin/console doctrine:schema:update --force
          bin/console a2b:migrate --preserve
      - name: Save database
        uses: actions/upload-artifact@v2
        with:
          name: dex-db-${{ env.BUILD_NUMBER }}
          path: |
            var/dex.db
            resources/data/data_migration_map.sqlite
